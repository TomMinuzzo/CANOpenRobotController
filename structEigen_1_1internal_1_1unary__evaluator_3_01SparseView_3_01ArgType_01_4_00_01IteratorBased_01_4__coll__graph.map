<map id="Eigen::internal::unary_evaluator&lt; SparseView&lt; ArgType &gt;, IteratorBased &gt;" name="Eigen::internal::unary_evaluator&lt; SparseView&lt; ArgType &gt;, IteratorBased &gt;">
<area shape="rect" id="node2" href="$structEigen_1_1internal_1_1evaluator__base.html" title="{Eigen::internal::evaluator\l_base\&lt; SparseView\&lt; ArgType \&gt; \&gt;\n||+ evaluator_base()\l+ ~evaluator_base()\l&#45; evaluator_base()\l&#45; operator=()\l}" alt="" coords="5,705,249,841"/>
<area shape="rect" id="node3" href="$structEigen_1_1internal_1_1evaluator.html" title="{Eigen::internal::evaluator\l\&lt; ArgType \&gt;\n||+ evaluator()\l}" alt="" coords="274,727,455,819"/>
<area shape="rect" id="node4" href="$structEigen_1_1internal_1_1unary__evaluator.html" title="{Eigen::internal::unary\l_evaluator\&lt; ArgType \&gt;\n||}" alt="" coords="267,411,436,503"/>
<area shape="rect" id="node5" href="$classEigen_1_1SparseView.html" title="Expression of a dense or sparse matrix with zero or too small values removed. " alt="" coords="491,668,651,877"/>
<area shape="rect" id="node6" href="$classEigen_1_1SparseMatrixBase.html" title="{Eigen::SparseMatrixBase\l\&lt; SparseView\&lt; MatrixType \&gt; \&gt;\n|# m_isRValue\l|+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ derived()\l+ derived()\l+ const_cast_derived()\l+ operator&#45;()\l+ cast()\l+ shift_right()\land 143 more...\l# assign()\l# assignGeneric()\l# convert_index()\l&#45; evalTo()\l}" alt="" coords="460,308,683,605"/>
<area shape="rect" id="node7" href="$structEigen_1_1EigenBase.html" title="{Eigen::EigenBase\&lt; Sparse\lView\&lt; MatrixType \&gt; \&gt;\n||+ derived()\l+ derived()\l+ const_cast_derived()\l+ const_derived()\l+ rows()\l+ cols()\l+ size()\l+ evalTo()\l+ addTo()\l+ subTo()\l+ applyThisOnTheRight()\l+ applyThisOnTheLeft()\l}" alt="" coords="475,5,667,259"/>
</map>
